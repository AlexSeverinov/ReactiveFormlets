{"name":"ReactiveFormlets","tagline":"Reactive and composable forms for Cocoa Touch.","body":"### Installing\r\n\r\nJust add the following to your `Podfile`:\r\n\r\n    pod 'ReactiveFormlets', :git => 'git://github.com/jonsterling/ReactiveFormlets.git'\r\n\r\n\r\n### An Example\r\n\r\n~~~~{.objc}\r\n@protocol LoginModel <RAFModel>\r\n- (id<RAFText>)emailAddress;\r\n- (id<RAFText>)password;\r\n+ (instancetype)emailAddress:(id<RAFText>)email password:(id<RAFText>)password;\r\n@end\r\n\r\n@implementation LoginTableViewController {\r\n    RAFTableForm<LoginModel> *_form;\r\n}\r\n\r\n- (void)loadView {\r\n    [super loadView];\r\n\r\n    Class LoginForm = [RAFSingleSectionTableForm model:@protocol(LoginModel)];\r\n    RAFTextFieldInputRow *field = [RAFTextFieldInputRow new];\r\n\r\n    RAFInputRowValidator emailAddressValidator = ^BOOL (NSString *input) {\r\n        NSString *emailRegex = @\"[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,4}\";\r\n        NSPredicate *emailTest = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", emailRegex];\r\n        return [emailTest evaluateWithObject:input];\r\n    };\r\n\r\n    RAFInputRowValidator requiredTextValidator = ^BOOL (NSString *input) {\r\n        return input.length > 0;\r\n    };\r\n\r\n    id<RAFText> emailField = [[field modifyTextField:^(UITextField *textField) {\r\n        textField.keyboardType = UIKeyboardTypeEmailAddress;\r\n    }] validators:@[ emailAddressValidator ]]\r\n\r\n    id<RAFText> passwordField = [[field modifyTextField:^(UITextField *textField) {\r\n        textField.secureTextEntry = YES;\r\n    }] validators:@[ requiredTextValidator ]];\r\n\r\n    _form = [LoginForm emailAddress:[emailField placeholder:@\"snoop@dogg.com\"]\r\n                           password:[passwordField placeholder:@\"password\"]];\r\n\r\n    self.view = [_form buildView];\r\n}\r\n~~~~\r\n\r\n### Authors and Contributors\r\n\r\n@jonsterling wrote this.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}